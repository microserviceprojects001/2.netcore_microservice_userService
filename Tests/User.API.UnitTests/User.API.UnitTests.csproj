<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    
    <!-- ===== 添加以下关键调试属性 ===== -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <OutputType>Exe</OutputType> <!-- 强制生成可执行文件 -->
    <IsTestProject>true</IsTestProject> <!-- 明确标记为测试项目 -->
    <Optimize>false</Optimize> <!-- 禁用优化 -->
    <Deterministic>false</Deterministic> <!-- 禁用确定性构建 -->
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <!-- ================================= -->
    <GenerateProgramFile>false</GenerateProgramFile> <!-- 防止自动生成 Program 类 -->
    <DisableImplicitNamespaceImports>true</DisableImplicitNamespaceImports> <!-- 解决命名冲突 -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.2" />
    <PackageReference Include="FluentAssertions" Version="8.4.0" />
    <PackageReference Include="Microsoft.AspNetCore.JsonPatch" Version="9.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="9.0.7" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.7" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.12.0" />
    <PackageReference Include="Moq" Version="4.20.72" />
    <PackageReference Include="xunit" Version="2.9.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.8.2">
      <!-- 添加 IncludeAssets 配置 -->
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\User.API\User.API.csproj" />
  </ItemGroup>

  <!-- 添加构建后事件验证符号 -->
  <!-- <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="echo 构建后检查符号文件: $(TargetDir)$(TargetName).pdb" />
    <Exec Command="if exist &quot;$(TargetDir)$(TargetName).pdb&quot; (echo PDB文件存在) else (echo 错误: PDB文件未生成)" />
  </Target> -->
  
</Project>